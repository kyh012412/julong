/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/main/resources/static_es6/js/system/role_type.js":
/*!**************************************************************!*\
  !*** ./src/main/resources/static_es6/js/system/role_type.js ***!
  \**************************************************************/
/***/ (function() {

eval("var upData = {};\nvar chkinsert = 0;\nvar chkUserinsert = 0;\nvar chkUserdelete = 0;\n$(document).ready(function () {\n  initFn();\n  fnPgmSearch();\n  fnRoleTypeUserSearch();\n});\n\n//############################################################\n//Page Event\n//############################################################\n//Page Load Event\n$(window).load(function () {});\n//button Event : searchBtn\n//$(document).on('click', '#searchBtn', function() {\n$(\"#searchBtn\").click(function () {\n  fnPgmSearch();\n  fnRoleTypeUserSearch();\n});\n//button Event : insertBtn\n//$(document).on('click', '#insertBtn', function() {\n$(\"#insertBtn\").click(function () {\n  fnUserSearch();\n});\n//button Event : searchUserBtn\n//$(document).on('click', '#searchUserBtn', function() {\n$(\"#searchUserBtn\").click(function () {\n  fnUserSearch();\n});\n\n//$(document).on('click','#roleTypeChk', function(){\n$(\"#roleTypeChk\").click(function () {\n  fnUserSearch();\n});\n\n//전체 선택,해제\n//$(document).on('click', '#chkAll_1', function() {\n$(\"#chkAll_1\").click(function () {\n  //console.log('chkAll_1 call');\n  fnChecked($('#roleTypeUserList').DataTable().rows().data(), $(\"#chkAll_1\").prop(\"checked\"), 'chk10');\n});\n//$(document).on('click', '#chkAll_2', function() {\n$(\"#chkAll_2\").click(function () {\n  //console.log('chkAll_2 call');\n  fnChecked($('#programList').DataTable().rows().data(), $(\"#chkAll_2\").prop(\"checked\"), 'chk20');\n});\n//$(document).on('click', '#chkAll_3', function() {\n$(\"#chkAll_3\").click(function () {\n  //console.log('chkAll_3 call');\n  fnChecked($('#userList').DataTable().rows().data(), $(\"#chkAll_3\").prop(\"checked\"), 'chk30');\n});\n\n//Page Initial Function\nfunction initFn() {\n  //롤별 사용자 내역 테이블\n  $(\"#roleTypeUserList\").DataTable({\n    order: [1, 'desc'],\n    ordering: false,\n    pageLength: 20,\n    pagingType: \"full_numbers\",\n    serverSide: false,\n    select: true,\n    searching: false,\n    info: false,\n    lengthMenu: [20, 40, 60, 80, 100],\n    dom: \"<'row'<'select-count'l>>\" + \"<'thead-fixed'<'scroll admin'tr>>\" + \"<'col'p>\",\n    language: {\n      zeroRecords: \"데이터가 존재하지 않습니다.\",\n      search: \"\",\n      searchPlaceholder: \"검색어 입력\",\n      lengthMenu: \"_MENU_개 보기\",\n      paginate: {\n        first: \"맨앞\",\n        previous: \"이전\",\n        next: \"다음\",\n        last: \"맨뒤\"\n      }\n    },\n    columns: [{\n      title: \"<input type='checkbox' id='chkAll_1'>\",\n      data: \"\",\n      width: \"10%\"\n    }, {\n      title: \"사번\",\n      data: \"memberId\",\n      width: \"15%\",\n      defaultContent: \"-\"\n    }, {\n      title: \"성명\",\n      data: \"memberName\",\n      width: \"10%\",\n      defaultContent: \"-\"\n    }, {\n      title: \"회사명\",\n      data: \"companyKrName\",\n      width: \"25%\",\n      defaultContent: \"-\"\n    }, {\n      title: \"팀명\",\n      data: \"divisionKrName\",\n      width: \"20%\",\n      defaultContent: \"-\"\n    }, {\n      title: \"직책\",\n      data: \"position\",\n      width: \"20%\",\n      defaultContent: \"-\"\n    }],\n    columnDefs: [{\n      order: false,\n      targets: 0,\n      className: \"\",\n      render: function render(data, type, row, meta) {\n        var html = \"<input type='checkbox' name='chk10' value='\" + row.memberId + \"'>\";\n        return html;\n      }\n    }, {\n      targets: 1,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }, {\n      targets: 2,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }, {\n      targets: 3,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }, {\n      targets: 4,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }, {\n      targets: 5,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }]\n  });\n\n  //사용자 내역 조회 테이블\n  $(\"#userList\").DataTable({\n    /*\n    order: [1, 'desc'],\n    ordering: false,\n    pageLength: 20,\n    pagingType: \"full_numbers\",\n    serverSide: false,\n    select: true,\n    searching: false,\n    info: false,\n    lengthMenu:  [20, 40, 60, 80, 100 ],\n    */\n    order: [1, 'asc'],\n    ordering: false,\n    paging: true,\n    destroy: true,\n    pageLength: 20,\n    pagingType: \"full_numbers\",\n    info: false,\n    LengthChange: true,\n    autoWidth: false,\n    lengthMenu: [20, 40, 60, 80, 100],\n    dom: \"<'row'<'select-count'l>>\" + \"<'thead-fixed'<'scroll admin'tr>>\" + \"<'col'p>\",\n    language: {\n      zeroRecords: \"데이터가 존재하지 않습니다.\",\n      search: \"\",\n      searchPlaceholder: \"검색어 입력\",\n      lengthMenu: \"_MENU_개 보기\",\n      paginate: {\n        first: \"맨앞\",\n        previous: \"이전\",\n        next: \"다음\",\n        last: \"맨뒤\"\n      }\n    },\n    columns: [{\n      title: \"<input type='checkbox' id='chkAll_3'>\",\n      data: \"\",\n      width: \"6%\"\n    }, {\n      title: \"성명\",\n      data: \"membername\",\n      width: \"13%\"\n    }, {\n      title: \"사번\",\n      data: \"memberid\",\n      width: \"13%\"\n    }, {\n      title: \"이메일\",\n      data: \"email\",\n      width: \"22%\"\n    }, {\n      title: \"회사\",\n      data: \"companykrname\",\n      width: \"13%\"\n    }, {\n      title: \"PU\",\n      data: \"pukrname\",\n      width: \"13%\"\n    }, {\n      title: \"소속팀\",\n      data: \"divisionkrname\",\n      width: \"12%\"\n    }, {\n      title: \"Role\",\n      data: \"codemembertype\",\n      width: \"8%\"\n    }],\n    columnDefs: [{\n      order: false,\n      targets: 0,\n      className: \"\",\n      render: function render(data, type, row, meta) {\n        var html = \"<input type='checkbox' name='chk30' value='\" + row.memberid + \"'>\";\n        return html;\n      }\n    }, {\n      targets: 1,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }, {\n      targets: 2,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }, {\n      targets: 3,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }, {\n      targets: 4,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }, {\n      targets: 5,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }, {\n      targets: 6,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }, {\n      targets: 7,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }]\n  });\n\n  //롤별 프로그램 내역 테이블\n  $(\"#programList\").DataTable({\n    order: [1, 'desc'],\n    ordering: false,\n    pageLength: 20,\n    pagingType: \"full_numbers\",\n    serverSide: false,\n    select: true,\n    searching: false,\n    paging: false,\n    info: false,\n    lengthMenu: [20, 40, 60, 80, 100],\n    dom: \"<'row'<'select-count'l>>\" + \"<'thead-fixed'<'scroll admin'tr>>\" + \"<'col'p>\",\n    language: {\n      zeroRecords: \"데이터가 존재하지 않습니다.\",\n      search: \"\",\n      searchPlaceholder: \"검색어 입력\",\n      lengthMenu: \"_MENU_개 보기\",\n      paginate: {\n        first: \"맨앞\",\n        previous: \"이전\",\n        next: \"다음\",\n        last: \"맨뒤\"\n      }\n    },\n    columns: [{\n      title: \"<input type='checkbox' id='chkAll_2'>\",\n      data: \"useyn\",\n      width: \"10%\"\n    }, {\n      title: \"프로그램명\",\n      data: \"programname\",\n      width: \"30%\"\n    }, {\n      title: \"프로그램id\",\n      data: \"programkey\"\n    }],\n    columnDefs: [{\n      order: false,\n      targets: 0,\n      className: \"\",\n      render: function render(data, type, row, meta) {\n        var html = \"<input type='checkbox'  name='chk20'\" + (data == true ? \"checked\" : \"\") + \" value='\" + row.programkey + \"'>\";\n        return html;\n      }\n    }, {\n      targets: 1,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }, {\n      targets: 2,\n      className: \"\",\n      render: function render(data, type, row) {\n        var html = data;\n        return html;\n      }\n    }]\n  });\n}\n\n//Search Function\nfunction fnPgmSearch() {\n  //프로그램 리스트 테이블 초기화\n  var table = $('#programList').DataTable();\n  table.clear();\n  //검색 조건\n  var searchData = {\n    udSelect: $(\"#udSelect\").val()\n  };\n  //데이터 조회\n  $.ajax({\n    type: \"POST\",\n    url: \"/system/roletype/api/roletypepgmList\",\n    contentType: \"application/json; charset=utf-8\",\n    data: JSON.stringify(searchData)\n  }).done(function (data) {\n    if (data)\n      //fnDraw(table,data)\n      fnDraw3(data);\n  }).fail(function (data) {\n    return true;\n  });\n}\n\n//Search Function\nfunction fnRoleTypeUserSearch() {\n  //$(\"#progressAdmin\").show();\n\n  //프로그램 리스트 테이블 초기화\n  var table = $('#roleTypeUserList').DataTable();\n  table.clear();\n  $('#progressAdmin').css(\"display\", \"block\");\n\n  //검색 조건\n  var searchData = {\n    udSelect: $(\"#udSelect\").val()\n  };\n  //데이터 조회\n  $.ajax({\n    type: \"POST\",\n    url: \"/system/roletype/api/roletypeuserList\",\n    contentType: \"application/json; charset=utf-8\",\n    data: JSON.stringify(searchData)\n  }).done(function (data) {\n    if (data)\n      //fnDraw(table,data)\n      fnDraw1(data);\n    //$(\"#progressAdmin\").hide();\n    $('#progressAdmin').css(\"display\", \"none\");\n  }).fail(function (data) {\n    //$(\"#progressAdmin\").hide();\n    $('#progressAdmin').css(\"display\", \"none\");\n    return true;\n  });\n}\n\n//Search Function\nfunction fnUserSearch() {\n  //$(\"#progressAdduser\").show();\n\n  //프로그램 리스트 테이블 초기화\n  var table = $('#userList').DataTable();\n  table.clear();\n  $('#progressAdduser').css(\"display\", \"block\");\n\n  //검색 조건\n  var roleTypeChk;\n  if ($(\"#roleTypeChk\").is(\":checked\")) {\n    roleTypeChk = 'on';\n  }\n  var searchData = {\n    roleTypeChk: roleTypeChk,\n    adminSearch: $(\"#adminSearch\").val()\n  };\n  //데이터 조회\n  $.ajax({\n    type: \"POST\",\n    url: \"/system/roletype/api/userList\",\n    contentType: \"application/json; charset=utf-8\",\n    data: JSON.stringify(searchData)\n  }).done(function (data) {\n    if (data)\n      //fnDraw(table,data)\n      fnDraw2(data);\n    //$(\"#progressAdduser\").hide();\n    $('#progressAdduser').css(\"display\", \"none\");\n    $(window).trigger('resize');\n  }).fail(function (data) {\n    //$(\"#progressAdduser\").hide();\n    $('#progressAdduser').css(\"display\", \"none\");\n    return true;\n  });\n}\nfunction fnDraw(table, data) {\n  //var table = $('#programList').DataTable();\n  table.rows.add(data);\n  table.draw();\n}\nfunction fnDraw1(data) {\n  var table = $('#roleTypeUserList').DataTable();\n  table.rows.add(data);\n  table.draw();\n}\nfunction fnDraw2(data) {\n  var table = $('#userList').DataTable();\n  table.rows.add(data);\n  table.draw();\n}\nfunction fnDraw3(data) {\n  var table = $('#programList').DataTable();\n  table.rows.add(data);\n  table.draw();\n}\nfunction fnChecked(table, checked, checkName) {\n  /* var i;\n   var chkboxName;\n   for(i=0; i<table.length; i++){\n       chkboxName=checkName+i;\n       $(\"input:checkbox[id='\"+ chkboxName +\"']\").prop(\"checked\", checked);\n   }*/\n\n  if (checked) {\n    $(\"input:checkbox[name='\" + checkName + \"']\").prop(\"checked\", true);\n  } else {\n    $(\"input:checkbox[name='\" + checkName + \"']\").prop(\"checked\", false);\n  }\n}\nfunction roletypeinsert(num) {\n  if ('1' == num) {\n    var inUpConfirm = confirm(\"저장하시겠습니까?\");\n    var insertChk = $(\"input[name='chk30']:checked\").length;\n    if (inUpConfirm == true) {\n      if (insertChk == 0) {\n        alert(\"사용자 한개 이상 체크해주시기 바랍니다.\");\n        return false;\n      }\n      $(\"input[name='chk30']:checked\").each(function (i, x) {\n        upData = {\n          userId: $(this).val(),\n          teamSelect: $(\"#udSelect\").val(),\n          roleTypeChk: num\n        };\n        apiCall('1');\n      });\n    }\n  } else if ('2' == num) {\n    var inUpConfirm = confirm(\"user 삭제하시겠습니까?\");\n    var deleteChk = $(\"input[name='chk10']:checked\").length;\n    if (inUpConfirm == true) {\n      if (deleteChk == 0) {\n        alert(\"user 한개 이상 체크해주시기 바랍니다.\");\n        return false;\n      }\n      $(\"input[name='chk10']:checked\").each(function (i, x) {\n        upData = {\n          userId: $(this).val(),\n          roleTypeChk: num\n        };\n        apiCall('2');\n      });\n    }\n  }\n}\nfunction apiCall(num) {\n  //데이터 조회\n  var insertChk = $(\"input[name='chk30']:checked\").length;\n  var deleteChk = $(\"input[name='chk10']:checked\").length;\n  $.ajax({\n    type: \"POST\",\n    url: \"/system/roletype/api/userListUpdate\",\n    contentType: \"application/json; charset=utf-8\",\n    data: JSON.stringify(upData)\n  }).done(function (data) {\n    if ('1' != num) {\n      chkUserdelete++;\n      if (deleteChk == chkUserdelete) {\n        alert(\"삭제되었습니다.\");\n        chkUserdelete = 0;\n        deleteChk = 0;\n      }\n    } else {\n      chkUserinsert++;\n      if (insertChk == chkUserinsert) {\n        alert(\"저장되었습니다.\");\n        chkUserinsert = 0;\n        insertChk = 0;\n        $(\".modal\").modal(\"hide\");\n      }\n    }\n    fnPgmSearch();\n    fnRoleTypeUserSearch();\n  }).fail(function (data) {\n    return true;\n  });\n}\n$('#btn-rolechk-save').on('click', function () {\n  roleChkInsert();\n});\n$('#btn-rolechk-delete').on('click', function () {\n  roletypeinsert('2');\n});\n$('#btn-rolechk-insert').on('click', function () {\n  roletypeinsert('1');\n});\nfunction roleChkInsert() {\n  var insertChk;\n  var insertUserchk;\n  var inUpConfirm = confirm(\"해당 권한을 저장하시겠습니까?\");\n  if (inUpConfirm == true) {\n    insertChk = $(\"input:checkbox[name='chk20']:checked\").length;\n    //insertUserchk = $(\"input:checkbox[name='chk10']:checked\").length;\n\n    /* if(insertUserchk==0){\n                alert(\"user  한개 이상 체크해주시기 바랍니다.\");\n                return false;\n            }*/\n\n    if (insertChk == 0) {\n      alert(\"선택된 프로그램명이 없습니다.\");\n      return false;\n    }\n    var firstDelete = 0;\n    $(\"input[name='chk20']:checked\").each(function (i, x) {\n      var searchData = {\n        udSelect: $(\"#udSelect\").val(),\n        memberkey: $(this).val(),\n        firstDelete: firstDelete\n      };\n      //데이터 조회\n      $.ajax({\n        type: \"POST\",\n        url: \"/system/roletype/api/roleChkInsert\",\n        contentType: \"application/json; charset=utf-8\",\n        data: JSON.stringify(searchData)\n      }).done(function (data) {\n        chkinsert++;\n        firstDelete++;\n        if (chkinsert == insertChk) {\n          alert(\"저장 되었습니다.\");\n          chkinsert = 0;\n          insertChk = 0;\n        }\n      }).fail(function (data) {\n        alert(data.responseJSON.message);\n        return true;\n      });\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main/resources/static_es6/js/system/role_type.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/main/resources/static_es6/js/system/role_type.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});